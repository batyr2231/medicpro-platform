import twilio from 'twilio';

const isDevelopment = process.env.NODE_ENV === 'development';

const client = twilio(
  process.env.TWILIO_ACCOUNT_SID,
  process.env.TWILIO_AUTH_TOKEN
);

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è 6-–∑–Ω–∞—á–Ω–æ–≥–æ –∫–æ–¥–∞
export const generateCode = () => {
  return Math.floor(100000 + Math.random() * 900000).toString();
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ SMS –∫–æ–¥–∞
export const sendVerificationCode = async (phone, code) => {
  try {
    // –í dev —Ä–µ–∂–∏–º–µ –ª–æ–≥–∏—Ä—É–µ–º –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
    if (isDevelopment) {
      console.log('üì± ========================================');
      console.log('üì± VERIFICATION CODE');
      console.log('üì± Phone:', phone);
      console.log('üì± Code:', code);
      console.log('üì± ========================================');
    }

    const message = await client.messages.create({
      body: `–í–∞—à –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è MedicPro: ${code}. –ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 5 –º–∏–Ω—É—Ç.`,
      from: process.env.TWILIO_PHONE_NUMBER,
      to: phone
    });
    
    console.log('‚úÖ SMS sent:', message.sid);
    return { success: true, sid: message.sid };
  } catch (error) {
    console.error('‚ùå SMS error:', error.message);
    
    // –í dev —Ä–µ–∂–∏–º–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—Ö –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    if (isDevelopment) {
      console.log('‚ö†Ô∏è DEV MODE: Ignoring SMS error');
      return { success: true, sid: 'dev-mock-' + Date.now() };
    }
    
    return { success: false, error: error.message };
  }
};

// –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ WhatsApp (–∏—Å–ø–æ–ª—å–∑—É—è Template)
export const sendWhatsAppCode = async (phone, code) => {
  try {
    const message = await client.messages.create({
      from: process.env.TWILIO_WHATSAPP_NUMBER,
      contentSid: process.env.TWILIO_WHATSAPP_TEMPLATE_SID,
      contentVariables: JSON.stringify({
        "1": code  // {{1}} –∑–∞–º–µ–Ω–∏—Ç—Å—è –Ω–∞ –∫–æ–¥
      }),
      to: `whatsapp:${phone}`
    });
    
    console.log('‚úÖ WhatsApp sent:', message.sid);
    return { success: true, sid: message.sid };
  } catch (error) {
    console.error('‚ùå WhatsApp error:', error);
    return { success: false, error: error.message };
  }
};
